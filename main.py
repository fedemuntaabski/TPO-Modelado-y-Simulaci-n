#!/usr/bin/env python3
"""
Simulador Matem√°tico Avanzado - Versi√≥n 3.0
Sistema integrado para m√©todos num√©ricos con interfaz gr√°fica moderna

Caracter√≠sticas:
- Interfaz PyQt6 con tema oscuro profesional
- M√©todos num√©ricos completos (ra√≠ces, integraci√≥n, EDO, etc.)
- Teclado virtual optimizado para funciones matem√°ticas
- Visualizaci√≥n avanzada y an√°lisis detallado
- Arquitectura modular y extensible

Autores: Equipo TPO Modelado y Simulaci√≥n
Fecha: 2025
Versi√≥n: 3.0
"""

import sys
import logging

# Importar m√≥dulos modulares
from gui.initializer import (
    show_startup_banner,
    check_and_install_dependencies,
    validate_python_version,
    setup_environment
)
from gui.app_launcher import launch_application

logger = logging.getLogger(__name__)

def main() -> int:
    """
    Funci√≥n principal del simulador.

    Returns:
        int: C√≥digo de salida del programa.
    """
    try:
        # Mostrar banner de inicio
        show_startup_banner()

        # Validar versi√≥n de Python
        if not validate_python_version():
            return 1

        # Verificar e instalar dependencias
        if not check_and_install_dependencies():
            return 1

        # Configurar entorno
        if not setup_environment():
            return 1

        # Lanzar aplicaci√≥n
        return launch_application()

    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è Aplicaci√≥n interrumpida por el usuario")
        logger.info("Aplicaci√≥n interrumpida por KeyboardInterrupt")
        return 0

    except Exception as e:
        logger.error(f"Error cr√≠tico en main: {e}")
        print(f"\n‚ùå Error cr√≠tico: {e}")
        print("üìã Revise el archivo simulator.log para m√°s detalles")
        return 1

if __name__ == "__main__":
    exit_code = main()
    sys.exit(exit_code)
