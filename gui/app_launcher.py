#!/usr/bin/env python3
"""
M√≥dulo de Lanzamiento de Aplicaci√≥n - Simulador Matem√°tico Avanzado
Contiene funciones para inicializar y lanzar la interfaz gr√°fica

Caracter√≠sticas:
- Inicializaci√≥n de QApplication
- Creaci√≥n de la ventana principal
- Configuraci√≥n de la aplicaci√≥n Qt
- Manejo de errores de importaci√≥n

Autores: Equipo TPO Modelado y Simulaci√≥n
Fecha: 2025
Versi√≥n: 3.0
"""

import sys
import logging

logger = logging.getLogger(__name__)

def launch_application() -> int:
    """
    Lanza la aplicaci√≥n principal.

    Returns:
        int: C√≥digo de salida de la aplicaci√≥n.
    """
    try:
        print("üé® Inicializando interfaz gr√°fica...")
        logger.info("Iniciando aplicaci√≥n GUI")

        from PyQt6.QtWidgets import QApplication
        from gui.components import MathSimulatorApp

        # Crear aplicaci√≥n Qt
        app = QApplication(sys.argv)
        app.setApplicationName("Simulador Matem√°tico Avanzado")
        app.setApplicationVersion("3.0")
        app.setOrganizationName("TPO Modelado y Simulaci√≥n")

        # Crear y mostrar ventana principal
        main_window = MathSimulatorApp()
        main_window.show()

        print("üöÄ Aplicaci√≥n iniciada correctamente!")
        print("üì± Interfaz gr√°fica disponible en ventana principal")

        # Mostrar instrucciones de uso
        print("\n" + "="*50)
        print("INSTRUCCIONES DE USO:")
        print("‚Ä¢ Use el teclado virtual para ingresar funciones")
        print("‚Ä¢ Explore las pesta√±as para diferentes m√©todos")
        print("‚Ä¢ Utilice las herramientas de an√°lisis en cada pesta√±a")
        print("‚Ä¢ Disfrute del tema oscuro profesional")
        print("="*50)

        logger.info("Interfaz gr√°fica mostrada exitosamente")

        # Ejecutar loop principal
        return app.exec()

    except ImportError as e:
        logger.error(f"Error importando m√≥dulos GUI: {e}")
        print(f"‚ùå Error importando componentes: {e}")
        print("üí° Verifique que los m√≥dulos gui/ est√©n disponibles")
        return 1

    except Exception as e:
        logger.error(f"Error inesperado en aplicaci√≥n: {e}")
        print(f"‚ùå Error inesperado: {e}")
        return 1
